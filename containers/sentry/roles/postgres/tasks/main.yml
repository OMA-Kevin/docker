- name: install postgresql packages debian/ubuntu
  apt: pkg={{ item }} state=latest
  with_items:
    - postgresql
    - postgresql-contrib
    - postgresql-client
    - libpq-dev
  when: ansible_os_family == "Debian"

- name: install postgresql packages redhat/centos
  yum: pkg={{ item }} state=latest
  with_items:
    - postgresql
    - postgresql-server
    - postgresql-contrib
    - postgresql-libs
    - postgresql-devel
  when: ansible_os_family == "RedHat"

# Aparently RedHat-family OSes don't automatically initialize DB cluster...
- name: init postgresql database
  command: service postgresql initdb creates=/var/lib/pgsql/data/postgresql.conf
  when: ansible_os_family == "RedHat"

# ...nor do they install themselves as starting at boot time
- name: ensure postgresql is running automatically at boot time
  command: chkconfig postgresql on
  when: ansible_os_family == "RedHat"

# And on top of that, authentication is configured as ident instead of md5
- name: copy pg_hba.conf
  copy: src=pg_hba.conf dest=/var/lib/pgsql/data/pg_hba.conf backup=on      
  notify:
    - restart postgresql
  when: ansible_os_family == "RedHat"

# Start PostgreSQL. This could/should be done as a notify, but somehow that doesn't properly happen... (TODO)
- name: start postgresql service
  service: name=postgresql state=started
  when: ansible_os_family == "RedHat"

- name: install postgresql python bindings
  pip: name=psycopg2

- name: setup database
  sudo_user: postgres
  postgresql_db:
    db: "{{ db_sentry.name }}"
    encoding: 'UTF-8'
    lc_collate: 'en_US.UTF-8'
    lc_ctype: 'en_US.UTF-8'
    template: 'template0'
    state: present

- name: grant access for database to user
  sudo_user: postgres
  postgresql_user:
    db: "{{ db_sentry.name }}"
    user: "{{ db_sentry.user }}"
    password: "{{ db_sentry.password }}"
    role_attr_flags: "CREATEDB,SUPERUSER"
    state: present
