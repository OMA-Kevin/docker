---
Install with the script

    Log into your machine as a user with sudo or root privileges.

    Make sure your existing yum packages are up-to-date.

    $ sudo yum update

    Run the Docker installation script.

    $ curl -sSL https://get.docker.com/ | sh

    This script adds the docker.repo repository and installs Docker.

    Start the Docker daemon.

    $ sudo service docker start

    Verify docker is installed correctly by running a test image in a container.

    $ sudo docker run hello-world


- hosts: local
  connection: local
  sudo: true
  vars:
  - gid: 11111
  - name: "docker"
  - fs_size: "20000M"
  - fs_type: "xfs"
  - volume: "/dev/sdb"
  tasks:
  - yum: name=* state=latest
  - yum: name={{ name }} state=latest
  - service: name={{ name }} state=restarted enabled=yes
  - group: name={{ name }} state=present gid={{ gid }}
  - file: path=/var/run/{{ name }}.sock owner=root group={{ name }} state=file
#  - yum: name=system-storage-manager state=latest
#  - shell:  ssm create -s {{ fs_size }} -n lv{{ name }} --fstype {{ fs_type }} -p vg{{ name }} {{ volume }} /{{ name }}
#    args:
#      creates: /dev/vg{{ name}}
#  - lineinfile: >
#      dest=/etc/fstab
#      line="/dev/vg{{ name }}/lv{{ name }}  /{{ name }}   {{fs_type}}     defaults        0 0"
#      state=present
  - file: path=/{{ name }}/volumes owner=root group={{ name }} state=directory mode=0750
  - file: path=/usr/local/docker owner=root group=docker state=directory mode=0750
#  - file: path=/usr/local/docker/java owner=root group=docker state=directory mode=0750
#  - copy: content="docker build -t java ." dest=/usr/local/docker/java/build.sh group={{ name }} mode=0750
#  - copy: src=Dockerfile.java dest=/usr/local/docker/java/Dockerfile group={{ name }} mode=0750
  - copy: src=docker-enter dest=/usr/local/bin group={{ name }} mode=0750
  - alternatives: name=docker-enter link=/usr/bin path=/usr/local/bin
  - copy: src=nsenter dest=/usr/local/bin group={{ name }} mode=0750
  - alternatives: name=nsenter link=/usr/bin path=/usr/local/bin
  - user: name=x8693 append=yes groups={{ name }}
  - debug: msg="{{ name }} run -i -t fedora /bin/bash"

